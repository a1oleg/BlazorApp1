@page "/ValueForm"
@using BlazorApp1.Data
@using GraphQL;
@inject ValuesService VService

@if (results != null && results.Errors != null)
{
    Console.WriteLine(results.Errors);
}

@if (results != null && results.Data.Dir != null)
{
    <EditForm Model="@exampleModel" OnSubmit="HandleValidSubmit">
        @*<DataAnnotationsValidator />
            <ValidationSummary />*@
        <p>
            <label>
                @dirName
                <InputSelect @bind-Value="@item">
                    <option value="">Выберите значение...</option>
                    <option>@results.Data.Dir.description</option>
                    @*@foreach (string s in results.Data.Dir.First().Values.Select(v => v.TXTLG))//.Select(d => d.description)
                    {
                        <option value=@s>@s</option>
                        }*@
                    /**/
                    /**/
                    /**/
                    /**/
                </InputSelect>
            </label>
        </p>
        <button type="submit">Выбрать</button>
    </EditForm>
}

@code {
    private ExampleModel exampleModel = new ExampleModel();

    [Parameter]
    public string dirName { get; set; }

    public GraphQLRequest getQu()
    {
        return new GraphQLRequest
        {
            Query = @"
         query DirValues($desc: String!){
               Dir(name: $desc) {
                description
                }
            }
        }",
            OperationName = "DirValues",
            Variables = new
            {
                desc = "OPER"
            }
        };
    }


    public Rootobject results { get; set; }

    protected override async Task OnInitializedAsync()
    {
        results = await VService.GetAsync(getQu());
    }




    private string item;

    private void HandleValidSubmit()
    {
        OnSubmitCallback.InvokeAsync(item);
    }

    [Parameter]
    public EventCallback<string> OnSubmitCallback { get; set; }
}